/*
@title: CubeDood's Puzzle Adventure
@author: Colack
@tags: ['puzzle']
@img: ""
@addedOn: 2024-04-29

Inspirations: [https://sprig.hackclub.com/gallery/tetris] [https://sprig.hackclub.com/gallery/minesweeper]

CubeDood is back in this miniature puzzle spinoff! 
Play through many different levels as CubeDood, solving different puzzles using many different tiles!

Controls:
WASD - Movement
I - Start
J - Interact
*/

// Title Alphabet Bitmaps. A-Z ' !
const TITLE_A = 'A';
const TITLE_B = 'B';
const TITLE_C = 'C';
const TITLE_D = 'D';
const TITLE_E = 'E';
const TITLE_F = 'F';
const TITLE_G = 'G';
const TITLE_H = 'H';
const TITLE_I = 'I';
const TITLE_J = 'J';
const TITLE_K = 'K';
const TITLE_L = 'L';
const TITLE_M = 'M';
const TITLE_N = 'N';
const TITLE_O = 'O';
const TITLE_P = 'P';
const TITLE_Q = 'Q';
const TITLE_R = 'R';
const TITLE_S = 'S';
const TITLE_T = 'T';
const TITLE_U = 'U';
const TITLE_V = 'V';
const TITLE_W = 'W';
const TITLE_X = 'X';
const TITLE_Y = 'Y';
const TITLE_Z = 'Z';
const TITLE_AP = "'";
const TITLE_EX = '!';

// System Colors
const BACKGROUND_ORANGE = '9';

// Walls
const WALL_BOX = 'b';
const WALL_TILE = 't';
const GAME_GOAL = 'g';
const GAME_PLAYER = 'p';

// Player Sprite
const PLAYER_FORWARD = '1';
const PLAYER_BACKWARD = '2';
const PLAYER_UP = '3';
const PLAYER_DOWN = '4';

var currentPlayerSprite = '';
var player = {
  x: 0,
  y: 0
}

const game = {
  rows: 16,
  cols: 16
}

var currentAvailableSprites = [];

setLegend(
  [ GAME_PLAYER, bitmap`
0000000000000000
0222222222222220
0222222222222220
0222222222222220
0222222222222220
0222222222222220
0222220002220000
0222220002220000
0222220002220000
0222222222222220
0222222222222220
0222222222222220
0222222222222220
0222222222222220
0222222222222220
0000000000000000`],
  [ GAME_GOAL, bitmap`
................
......0.........
......00000000..
......0000000...
......000000....
......0000000...
......00000000..
......0.........
......0.........
......0.........
......0.........
......0.........
......0.........
......0.........
...0000000......
..000000000.....`],
  
  [ TITLE_C, bitmap`
................
......000000....
.....0000000....
....000.........
...000..........
...00...........
...00...........
...00...........
...00...........
...00...........
...00...........
...000..........
....000.........
.....0000000....
......000000....
................`],
  [ TITLE_U, bitmap`
................
................
................
..00........00..
..00........00..
..00........00..
..00........00..
..00........00..
..00........00..
..00........00..
..00........00..
..000......000..
...000....000...
....00000000....
.....000000.....
................`],
  [ TITLE_B, bitmap`
................
...000000000....
..00000000000...
..00.......00...
..00.......00...
..00......000...
..00..000000....
..00.00000......
..00.00000......
..00..000000....
..00......000...
..00.......00...
..00.......00...
..00000000000...
...000000000....
................`],
  [ TITLE_E, bitmap`
................
...00000000000..
..000000000000..
..00000000000...
..00............
..00............
..00............
..0000000000....
..0000000000....
..00............
..00............
..00............
..00000000000...
..000000000000..
...00000000000..
................`],
  [ TITLE_D, bitmap`
................
..00000000......
..000000000.....
..00.....000....
..00......000...
..00.......00...
..00.......00...
..00.......00...
..00.......00...
..00.......00...
..00.......00...
..00......000...
..00.....000....
..000000000.....
..00000000......
................`],
  [ TITLE_O, bitmap`
................
....00000000....
...0000000000...
..000......000..
.000........000.
.00..........00.
.00..........00.
.00..........00.
.00..........00.
.00..........00.
.00..........00.
.000........000.
..000......000..
...0000000000...
....00000000....
................`],
  [ TITLE_P, bitmap`
................
..0000000.......
..00000000......
..00....000.....
..00.....00.....
..00.....00.....
..00....000.....
..00000000......
..0000000.......
..00............
..00............
..00............
..00............
..00............
..00............
................`],
  [ TITLE_AP, bitmap`
................
.000............
..00............
..00............
................
................
................
................
................
................
................
................
................
................
................
................`],

  [ BACKGROUND_ORANGE, bitmap`
9999999999999999
9999999999999999
9999999999999999
9999999999999999
9999999999999999
9999999999999999
9999999999999999
9999999999999999
9999999999999999
9999999999999999
9999999999999999
9999999999999999
9999999999999999
9999999999999999
9999999999999999
9999999999999999`],

  [ PLAYER_FORWARD, bitmap`
0000000000000000
0222222222222220
0222222222222220
0222222222222220
0222222222222220
0222222222222220
0222220002220000
0222220002220000
0222220002220000
0222222222222220
0222222222222220
0222222222222220
0222222222222220
0222222222222220
0222222222222220
0000000000000000`],
  [ PLAYER_BACKWARD, bitmap`
0000000000000000
0222222222222220
0222222222222220
0222222222222220
0222222222222220
0222222222222220
0000222000222220
0000222000222220
0000222000222220
0222222222222220
0222222222222220
0222222222222220
0222222222222220
0222222222222220
0222222222222220
0000000000000000`],
  [ PLAYER_UP, bitmap`
0000000000000000
0222222222222220
0220002222000220
0220002222000220
0220002222000220
0222222222222220
0222222222222220
0222222222222220
0222222222222220
0222222222222220
0222222222222220
0222222222222220
0222222222222220
0222222222222220
0222222222222220
0000000000000000`],
  [ PLAYER_DOWN, bitmap`
0000000000000000
0222222222222220
0222222222222220
0222222222222220
0222222222222220
0222222222222220
0222222222222220
0222222222222220
0222222222222220
0222222222222220
0222222222222220
0220002222000220
0220002222000220
0220002222000220
0222222222222220
0000000000000000`],
)

setSolids([])

let level = 0
const levels = [
  map`
p...............
................
................
................
................
.....g..........
....CUBEDOOD'...
................
................
...P............
................
................
................
................
................
................
................`, // Main Menu
]

setBackground(BACKGROUND_ORANGE)
setMap(levels[level])

setPushables({
  [ GAME_PLAYER ]: []
});

function movePlayer(direction) {
  switch (direction) {
    case "u":
      if (!player.y < 0) {
        player.y -= 1;
      }
      break;
    case "l":
      if (!player.x < 0) {
        player.x -= 1;
      }
      break;
    case "d":
      if (!player.y > 16) {
        player.y += 1;
      }
      break;
    case "r":
      if (!player.x > 16) {
        player.x += 1;
      }
      break;
  }
}

function updatePlayer() {
  
}

function loadSprites() {
  const legend = [];
  let i = 0;
  for (let r = 0; r < game.rows; r++) {
    for (let c = 0; c < game.cols; c++) {
      legend.push
    }
  }
}

setInterval(() => {
  getAll().forEach((sprite) => {
    sprite.remove();
  })
  loadSprites();
}, 30);
  
onInput("w", () => { movePlayer("u") })
onInput("a", () => { movePlayer("l") })
onInput("s", () => { movePlayer("d") })
onInput("d", () => { movePlayer("r") })

afterInput(() => {
  
})
